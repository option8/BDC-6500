GLOBAL { CPU "6502"; NEWLINEAFTERJMP TRUE; NEWLINEAFTERRTS TRUE; STARTADDR $0000; COMMENTS 4; HEXOFFS TRUE; COMMENTCOLUMN 32;};



segment { name "zero page"; start $0000; end $00FF;};
range { name "stack"; start $0100; end $01FF; TYPE BYTETABLE;};

range { name "MEMORY"; start $0200; end $157F; TYPE BYTETABLE;};

segment { name "6522"; start $1580; end $158F;};
range { name "6530-DATA"; start $1700; end $17FF; TYPE BYTETABLE;};
segment { name "6530-03"; start $1800; end $1BFF;};
segment { name "6530-02"; start $1C00; end $1FFF;};
range { name "16K-Expansion"; start $2000; end $5fff; TYPE BYTETABLE;};
range { name "VisableMemory"; start $6000; end $7fff; TYPE BYTETABLE;};

range { name "MEMORY-2"; start $8000; end $EFFF; TYPE BYTETABLE;};

RANGE {START $FDE2; END $FFF9; TYPE SKIP; NAME "ZEROES";};

range {start $1a96; end $1BF9; type bytetable;};
range {start $1590; end $15ff; type bytetable;};

####
# 6530 ROMs
####

LABEL { NAME "6522-PORTB";	ADDR $1580;	size $01;	COMMENT "Output or input register B	";};
LABEL { NAME "6522-PORTA";	ADDR $1581;	size $01;	COMMENT "Output or input register A";};
LABEL { NAME "6522-DDRB ";	ADDR $1582;	size $01;	COMMENT "Data direction register B	";};
LABEL { NAME "6522-DDRA ";	ADDR $1583;	size $01;	COMMENT "Data direction register A	";};
LABEL { NAME "6522-T1CL ";	ADDR $1584;	size $01;	COMMENT "T1 low-byte latch or T1 low-byte counter	";};
LABEL { NAME "6522-T1CH ";	ADDR $1585;	size $01;	COMMENT "T1 high-byte counter	";};
LABEL { NAME "6522-T1LL ";	ADDR $1586;	size $01;	COMMENT "T1 low-byte latch	";};
LABEL { NAME "6522-T1LH ";	ADDR $1587;	size $01;	COMMENT "T1 high-byte latch	";};
LABEL { NAME "6522-T2LL ";	ADDR $1588;	size $01;	COMMENT "T2 low-byte latch or T2 low-byte counter	";};
LABEL { NAME "6522-T2CH ";	ADDR $1589;	size $01;	COMMENT "T2 high-byte counter	";};
LABEL { NAME "6522-SR   ";	ADDR $158A;	size $01;	COMMENT "Shift Register	";};
LABEL { NAME "6522-ACR  ";	ADDR $158B;	size $01;	COMMENT "Auxiliary Control Register	";};
LABEL { NAME "6522-PCR  ";	ADDR $158C;	size $01;	COMMENT "Peripheral Control Register	";};
LABEL { NAME "6522-IFR  ";	ADDR $158D;	size $01;	COMMENT "Interrupt Flag Register			";};
LABEL { NAME "6522-IER  ";	ADDR $158E;	size $01;	COMMENT "Interrupt Enable Register			";};
LABEL { NAME "6522-ORAX ";	ADDR $158F;	size $01;	COMMENT "Identical to offset 1 but no handshake	";};


LABEL { NAME "6530APIO";	ADDR $1733;	COMMENT "6530-003 Application IO";};	
LABEL { NAME "6530APIO2";	ADDR $1734;	COMMENT "6530-003 Application IO";};	
LABEL { NAME "6530PADD";	ADDR $1701;	COMMENT "6530-003 A Data Direction Register";};
LABEL { NAME "6530PBD";	ADDR $1702;	COMMENT "6530-003 B Data Register";};
LABEL { NAME "6530PBDD";	ADDR $1703;	COMMENT "6530-003 B Data Direction Register";};	
#LABEL { NAME "ACC";	ADDR $00F3;	COMMENT "ACCUMULATOR";};
LABEL { NAME "ADDR";	ADDR $1CBE;};
LABEL { NAME "ADDRM";	ADDR $1CC8;};
LABEL { NAME "AK";	ADDR $1EFE;};
LABEL { NAME "AK1";	ADDR $1F04;};
#LABEL { NAME "CHAR";	ADDR $00FE;};
LABEL { NAME "CHK";	ADDR $1F91;};
LABEL { NAME "CHKH";	ADDR $17E8;	COMMENT "CHKSUM";};
#LABEL { NAME "CHKHI";	ADDR $00F6;};
LABEL { NAME "CHKL";	ADDR $17E7;};
#LABEL { NAME "CHKSUM";	ADDR $00F7;};
LABEL { NAME "CHKT";	ADDR $194C;};
LABEL { NAME "CHT1";	ADDR $1982;};
LABEL { NAME "CHT2";	ADDR $198E;	COMMENT "DATA BIT=0";};
LABEL { NAME "CHT3";	ADDR $1991;};
LABEL { NAME "CLEAR";	ADDR $1C64;};
LABEL { NAME "CLK1T";	ADDR $1744;	COMMENT "DIV BY 1 TIME";};

LABEL { NAME "CLK64T";	ADDR $1746;	COMMENT "DIV BY 64 TIME";};
LABEL { NAME "CLK8T";	ADDR $1745;	COMMENT "DIV BY 8 TIME";};
LABEL { NAME "CLKKT";	ADDR $1747;	COMMENT "DIV BY 1024 TIME";};
#LABEL { NAME "CLKRDI";	ADDR $1747;};
#LABEL { NAME "CLKRDT";	ADDR $1746;};

LABEL { NAME "CNTH30";	ADDR $17F3;	COMMENT "TTY DELAY";};
LABEL { NAME "CNTL30";	ADDR $17F2;	COMMENT "TTY DELAY";};
LABEL { NAME "CONVD";	ADDR $1F48;};
LABEL { NAME "CONVD1";	ADDR $1F5B;};
LABEL { NAME "CRLF";	ADDR $1E2F;};
LABEL { NAME "DATA";	ADDR $1CA8;};
LABEL { NAME "DATA1";	ADDR $1CB0;};
LABEL { NAME "DATA2";	ADDR $1CC3;};
LABEL { NAME "DATAM";	ADDR $1CCC;};
LABEL { NAME "DATAM1";	ADDR $1CCE;};
LABEL { NAME "DATAM2";	ADDR $1CD0;};
LABEL { NAME "DE2";	ADDR $1EDD;};
LABEL { NAME "DE3";	ADDR $1EE5;};
LABEL { NAME "DE4";	ADDR $1EDE;};
LABEL { NAME "DEHALF";	ADDR $1EEB;};
LABEL { NAME "DELAY";	ADDR $1ED4;};
LABEL { NAME "DET1";	ADDR $1C31;};
LABEL { NAME "DET2";	ADDR $1C42;};
LABEL { NAME "DET3";	ADDR $1C3A;};
LABEL { NAME "DETCPS";	ADDR $1C2A;};
LABEL { NAME "DUMP";	ADDR $1D42;};
LABEL { NAME "DUMP0";	ADDR $1D48;};
LABEL { NAME "DUMP1";	ADDR $1D4E;};
LABEL { NAME "DUMP2";	ADDR $1D86;};
LABEL { NAME "DUMP3";	ADDR $1DA6;};
LABEL { NAME "DUMP4";	ADDR $1D7A;};
LABEL { NAME "DUMPT";	ADDR $1800;	COMMENT " LOAD ABSOLUTE INST";};
LABEL { NAME "DUMPT1";	ADDR $1814;	COMMENT " SYNC CHAR'S";};
LABEL { NAME "DUMPT2";	ADDR $1833;	COMMENT " CHECK FOR LAST";};
LABEL { NAME "DUMPT3";	ADDR $1854;	COMMENT " EOT CHAR";};
LABEL { NAME "DUMPT4";	ADDR $1865;	COMMENT " DATA BYTE OUTPUT";};
LABEL { NAME "DUMPV";	ADDR $1E01;};
LABEL { NAME "EAH";	ADDR $17F8;	COMMENT "HI ENDING ADDRESS";};
LABEL { NAME "EAL";	ADDR $17F7;	COMMENT "LOW ENDING ADDRESS";};
LABEL { NAME "FEED";	ADDR $1E07;};
LABEL { NAME "FEED1";	ADDR $1E12;};
LABEL { NAME "GET1";	ADDR $1E60;};
LABEL { NAME "GET2";	ADDR $1E6D;};
LABEL { NAME "GET5";	ADDR $1E6A;};
LABEL { NAME "GET6";	ADDR $1E87;};
LABEL { NAME "GETBYT";	ADDR $1F9D;};
LABEL { NAME "GETCH";	ADDR $1E5A;};
LABEL { NAME "GETK";	ADDR $1C8D;};
LABEL { NAME "GETKE5";	ADDR $1F6C;};
LABEL { NAME "GETKEY";	ADDR $1F6A;};
LABEL { NAME "GOEXEC";	ADDR $1DC8;};
LABEL { NAME "GOV";	ADDR $1CD9;};
LABEL { NAME "HEX1";	ADDR $1978;};
LABEL { NAME "HEXALP";	ADDR $1FB9;};
LABEL { NAME "HEXNUM";	ADDR $1FB4;};
LABEL { NAME "HEXOUT";	ADDR $196F;};
LABEL { NAME "HEXTA";	ADDR $1E4C;};
LABEL { NAME "HEXTA1";	ADDR $1E55;};
LABEL { NAME "ID";	ADDR $17F9;	COMMENT "TAPE PROGRAM ID NUMBER";};
LABEL { NAME "INCPT";	ADDR $1F63;};
LABEL { NAME "INCPT2";	ADDR $1F69;};
LABEL { NAME "INCVE1";	ADDR $19F2;};
LABEL { NAME "INCVEB";	ADDR $19EA;};
#LABEL { NAME "INH";	ADDR $00F9;	COMMENT "INPUT BUFFER";};
LABEL { NAME "INIT1";	ADDR $1E8C;};
LABEL { NAME "INITS";	ADDR $1E88;};
#LABEL { NAME "INL";	ADDR $00F8;	COMMENT "INPUT BUFFER";};
LABEL { NAME "INPUTBUFFER";	ADDR $BF5D ;	comment "SET AT F2E1";};
LABEL { NAME "INPUTHB";	ADDR $E8 ;	comment "==BF";};
LABEL { NAME "INPUTLB";	ADDR $E7 ;	comment "==5D";};
LABEL { NAME "INPUTPTR";	ADDR $F2E1 ;	comment "SET INPUT BUFFER POINTER TO $BF5D";};			
LABEL { NAME "INTVEB";	ADDR $1932;	COMMENT "MOVE SA TO VEB+1,2";};
LABEL { NAME "IRQENT" ;	ADDR $1FFE;	size $02;};
LABEL { NAME "IRQP27" ;	ADDR $1BFE;	size $02;};
LABEL { NAME "IRQT";	ADDR $1C1F;};
LABEL { NAME "IRQV-K" ;	ADDR $17FE;	size $02;	COMMENT "IRQ VECTOR (BRK= 1C00)";};
LABEL { NAME "IRQV";	ADDR $FFFE;	size $02;};
LABEL { NAME "KEYIN";	ADDR $1F7A;};
LABEL { NAME "KEYIN1";	ADDR $1F7C;};
LABEL { NAME "KEYIN2";	ADDR $1F82;};
LABEL { NAME "KEYIN3";	ADDR $1F8A;};
LABEL { NAME "KEYIN4";	ADDR $1F8D;};
LABEL { NAME "DOKIMRST";	ADDR  $FC17;	COMMENT "DOES KIM RESET if MODE bit 6";};
LABEL { NAME "KIMRST";	ADDR  $1C22;	COMMENT "KIM ENTRY VIA RST, 6530-002";};
LABEL { NAME "LOAD";	ADDR $1CE7;};
LABEL { NAME "LOAD10";	ADDR $192B;};
LABEL { NAME "LOAD11";	ADDR $18C2;	COMMENT "READ ID FROM TAPE";};
LABEL { NAME "LOAD12";	ADDR $190F;	COMMENT "INCREMENT DATA POINTER";};
LABEL { NAME "LOAD13";	ADDR $18FA;	COMMENT "GET CHAR (X)";};
LABEL { NAME "LOAD2";	ADDR $1D0E;};
LABEL { NAME "LOAD3";	ADDR $1D1D;};
LABEL { NAME "LOAD7";	ADDR $1D2E;};
LABEL { NAME "LOAD8";	ADDR $1D30;};
LABEL { NAME "LOADE1";	ADDR $1D3B;};
LABEL { NAME "LOADER";	ADDR $1D3E;};
LABEL { NAME "LOADS";	ADDR $1CEE;};
LABEL { NAME "LOADT";	ADDR $1873;	COMMENT " INIT VOLATILE EXECUTION";};
LABEL { NAME "LOADT4";	ADDR $18B5;	COMMENT " LOOK FOR START OF";};
LABEL { NAME "LOADT5";	ADDR $18D7;	COMMENT "GET SA FROM TAPE";};
LABEL { NAME "LOADT6";	ADDR $18EC;	COMMENT "GET SA BUT IGNORE";};
LABEL { NAME "LOADT7";	ADDR $18F8;	COMMENT "GET 2 CHARS";};
LABEL { NAME "LOADT8";	ADDR $1915;	COMMENT "END OF DATA, COMPARE CHKSUM";};
LABEL { NAME "LOADT9";	ADDR $1929;	COMMENT "ERROR EXIT";};
LABEL { NAME "LOADV";	ADDR $1E04;};
#LABEL { NAME "MODE";	ADDR $00FF;};	
LABEL { NAME "MODIFY";	ADDR $1E15;};
LABEL { NAME "NMIENT" ;	ADDR $1FFA;	size $02;};
LABEL { NAME "NMIP27" ;	ADDR $1BFA;	size $02;};
LABEL { NAME "NMIT";	ADDR $1C1C;};
LABEL { NAME "NMIV-K" ;	ADDR $17FA;	size $02;	COMMENT "STOP VECTOR (STOP=1C00)";};
LABEL { NAME "NMIV";	ADDR $FFFA;	size $02;};
LABEL { NAME "ONE";	ADDR $199E;};
LABEL { NAME "ONE1";	ADDR $19A1;	COMMENT "WAIT FOR TIME OUT";};
LABEL { NAME "ONE2";	ADDR $19B0;};
LABEL { NAME "ONEKEY";	ADDR $1F02;};
LABEL { NAME "OPEN";	ADDR $1FCC;};
LABEL { NAME "OUT1";	ADDR $1EB4;};
LABEL { NAME "OUTBT";	ADDR $1961;	COMMENT "SAVX DATA BYTE";};
LABEL { NAME "OUTBTC";	ADDR $195E;	COMMENT "COMPARE CHKSUM";};
LABEL { NAME "OUTCH";	ADDR $1EA0;};
LABEL { NAME "OUTCHT";	ADDR $197A;};
LABEL { NAME "OUTSP";	ADDR $1E9E;};
LABEL { NAME "PACK";	ADDR $1FAC;};
LABEL { NAME "PACKT";	ADDR $1A00;};
LABEL { NAME "PACKT1";	ADDR $1A0F;};
LABEL { NAME "PACKT2";	ADDR $1A15;};
LABEL { NAME "PACKT3";	ADDR $1A22;	COMMENT "Y=1 NOT HEX";};
LABEL { NAME "PADD";	ADDR $1741;	COMMENT "6530 A DATA DIRECTION";};
LABEL { NAME "PBDD";	ADDR $1743;	COMMENT "6530 B DATA DIRECTION";};
LABEL { NAME "PCCMD";	ADDR $1CDC;};
#LABEL { NAME "PCH";	ADDR $00F0;	COMMENT "PROGRAM CNT HI";};
#LABEL { NAME "PCL";	ADDR $00EF;	COMMENT "PROGRAM CNT LOW";};
LABEL { NAME "PLL1";	ADDR $1A75;};
LABEL { NAME "PLL2";	ADDR $1A84;};
LABEL { NAME "PLLCAL";	ADDR $1A6B;};

#LABEL { NAME "POINTH";	ADDR $00FB;	COMMENT "MSB OF OPEN CELL";};
#LABEL { NAME "POINTL";	ADDR $00FA;	COMMENT "LSB OF OPEN CELL";};
#LABEL { NAME "PREG";	ADDR $00F1;	COMMENT "CURRENT STATUS REG";};

LABEL { NAME "PRT1";	ADDR $1E3A;};
LABEL { NAME "PRTBYT";	ADDR $1E3B;};
LABEL { NAME "PRTPNT";	ADDR $1E1E;};
LABEL { NAME "PRTST";	ADDR $1E31;};
LABEL { NAME "RDBIT";	ADDR $1A41;	COMMENT "WAIT FOR END OF START BIT";};
LABEL { NAME "RDBIT2";	ADDR $1A53;};
LABEL { NAME "RDBIT3";	ADDR $1A50;	COMMENT "DELAY 100 MICROSEC";};
LABEL { NAME "RDBIT4";	ADDR $1A63;	COMMENT "DELAY 50 MICROSEC";};
LABEL { NAME "RDBYT";	ADDR $19F3;};
LABEL { NAME "RDBYT2";	ADDR $19F9;};
LABEL { NAME "RDCHT";	ADDR $1A24;};
LABEL { NAME "RDCHT1";	ADDR $1A29;	COMMENT "GET NEXT DATA BIT";};
LABEL { NAME "READ";	ADDR $1C6A;};
LABEL { NAME "RSTENT" ;	ADDR $1FFC;	size $02;};
LABEL { NAME "RSTP27" ;	ADDR $1BFC;	size $02;};
LABEL { NAME "RSTV-K" ;	ADDR $17FC;	size $02;	COMMENT "RST VECTOR";};
LABEL { NAME "RSTV";	ADDR $FFFC;	size $02;};
LABEL { NAME "RTRN";	ADDR $1DC2;};
LABEL { NAME "SAD";	ADDR $1740;	COMMENT "6530 A DATA";};
LABEL { NAME "SAH";	ADDR $17F6;	COMMENT "HI STARTING ADDRESS";};
LABEL { NAME "SAL";	ADDR $17F5;	COMMENT "LOW STARTING ADDRESS";};
LABEL { NAME "SAVE";	ADDR $1C00;};
LABEL { NAME "SAVE1";	ADDR $1C05;};
LABEL { NAME "SAVE2";	ADDR $1C0F;};
LABEL { NAME "SAVX";	ADDR $17E9;	SIZE 3;	};
LABEL { NAME "SBD";	ADDR $1742;	COMMENT "6530 B DATA";};
LABEL { NAME "SCAN";	ADDR $1DDB;};
LABEL { NAME "SCAND";	ADDR $1F19;};
LABEL { NAME "SCAND1";	ADDR $1F28;};
LABEL { NAME "SETT3";	ADDR $F2EC ;	comment "SET DATA TABLE 3 TO $BFA7";};			
LABEL { NAME "SHOW";	ADDR $1DAC;};
LABEL { NAME "SHOW1";	ADDR $1DAF;};
LABEL { NAME "SPACE";	ADDR $1DA9;};
# LABEL { NAME "SPUSER";	ADDR $00F2;	COMMENT "CURRENT STACK POINTER";};
LABEL { NAME "START";	ADDR $1C4F;};
LABEL { NAME "STEP";	ADDR $1CD3;};
LABEL { NAME "STV";	ADDR $1DFE;};
LABEL { NAME "SYNC";	ADDR $1891;	COMMENT " CLEAR SAVX FOR SYNC CHAR";};
LABEL { NAME "SYNC1";	ADDR $1896;	COMMENT " GET A BIT";};
LABEL { NAME "SYNC2";	ADDR $18AB;};
LABEL { NAME "SetupT1";	ADDR $F1E0 ;	COMMENT "SETS UP DATA TABLE 1 AT BF51";};
LABEL { NAME "T3HB";	ADDR $EA ;	comment "==BF";};
LABEL { NAME "T3LB";	ADDR $E9 ;	comment "==A7";};
LABEL { NAME "TAB";	ADDR $1871;	SIZE 2;	comment "->LOAD12";};
RANGE { NAME "TABLE";	start $1FE7; end $1ff6; type BYTETABLE; comment "hex to 7-segment";};
LABEL { NAME "TBL1";	ADDR $BF51 ;	COMMENT "DATA TABLE 1, SET AT F1EF";	};
LABEL { NAME "TBL3";	ADDR $BFA7 ;	comment "SET AT F2EC";};
# LABEL { NAME "TEMP";	ADDR $00FC;};
LABEL { NAME "TIMH";	ADDR $17F4;};
#LABEL { NAME "TMPX";	ADDR $00FD;};
RANGE { NAME "TOP";	START $1FD5; END $1FE6; type BYTETABLE;};
LABEL { NAME "TTYKB";	ADDR $1C77;};
LABEL { NAME "TTYKB1";	ADDR $1C7C;};
LABEL { NAME "UPDAT1";	ADDR $1FC1;};
LABEL { NAME "UPDAT2";	ADDR $1FCB;};
LABEL { NAME "UPDATE";	ADDR $1FBB;};
LABEL { NAME "VEB";	ADDR $17EC;	SIZE 6;	COMMENT "VOLATILE EXECUTION BLOCK";};
#LABEL { NAME "XREG";	ADDR $00F5;	COMMENT "X INDEX";};
#LABEL { NAME "YREG";	ADDR $00F4;	COMMENT "Y INDEX";};
LABEL { NAME "ZRO";	ADDR $19C4;};
LABEL { NAME "ZRO1";	ADDR $19C7;};
LABEL { NAME "ZRO2";	ADDR $19D6;};










# KVOS Zero Page?

LABEL {ADDR $F1; NAME "SRC-LO"; COMMENT "scrolling origin address";};
LABEL {ADDR $F2; NAME "SRC-HI"; COMMENT "scrolling origin address";};
LABEL {ADDR $FB; NAME "SCRNLO"; COMMENT "SCREEN POSITION LOW BYTE";};
LABEL {ADDR $FC; NAME "SCRNHI"; COMMENT "SCREEN POSITION HIGH BYTE";};

RANGE {START $DD; END $DE; NAME "DDaddr"; COMMENT "16 bit address - hexdump?"; type ADDRTABLE;};
RANGE {START $DF; END $E0; NAME "DFaddr"; COMMENT "16 bit address - hexdump?"; type ADDRTABLE;};



# RANGE {START $F1; END $F2; NAME "F1addr"; COMMENT "16 bit address - ?"; type ADDRTABLE;};
# RANGE {START $FB; END $FC; NAME "FBaddr"; COMMENT "16 bit address - ?"; type ADDRTABLE;};

LABEL { ADDR $F5F6; NAME "F1toFB"; COMMENT "copies (F1,F2) bytes to (FB,FC)";};

RANGE {START $1600; END $160F; NAME "JUMP TABLE"; COMMENT "JUMP TABLE"; TYPE ADDRTABLE;};



LABEL { ADDR $BF49; NAME "XTMP1"; COMMENT "TEMPORARY STORAGE FOR X REG";};
LABEL { ADDR $BF4A; NAME "YTMP1"; COMMENT "TEMPORARY STORAGE FOR Y REG";};
LABEL { ADDR $BF4B; NAME "XTMP2"; COMMENT "TEMPORARY STORAGE FOR X REG";};
LABEL { ADDR $BF4C; NAME "YTMP2"; COMMENT "TEMPORARY STORAGE FOR Y REG";};
LABEL { ADDR $BF4D; NAME "XTMP3"; COMMENT "TEMPORARY STORAGE FOR X REG";};





RANGE { NAME "CHARACTER ROM"; END $F1DF; START $F000; TYPE BYTETABLE; };
RANGE { NAME "MASK1"; START $F739; END $F740;  TYPE BYTETABLE; COMMENT "BIT MASK TABLE";};
RANGE { NAME "MASK2"; START $F741; END $F748;  TYPE BYTETABLE; COMMENT "BIT MASK TABLE";};
RANGE { NAME "MASK3"; START $F8A2; END $F8A9;  TYPE BYTETABLE; COMMENT "BIT MASK TABLE";};
RANGE {START $F321; END $F325; TYPE BYTETABLE; COMMENT "SEE $F30B"; NAME "fsyxa";};
RANGE {START $FA4D; END $FA51; TYPE BYTETABLE; COMMENT "SEE $FA39"; NAME "FSYXA";};

label {addr $F392; name "zero-1644"; COMMENT "zero out 1644, 00,x 01,x";};

label {addr $F3B3; name "compare-161e"; COMMENT "compare A to $161E, set carry";};

label {addr $F3C4; name "JUMP-160E"; COMMENT "jumps to (160E)";};
label {addr $F3F3; name "CLEARHIBITS"; comment "clears high 4 bits";};


LABEL { NAME "F5-F6toSCREEN"; ADDR $F715; COMMENT "flashing cursor?";};

LABEL { NAME "CHARTOBITMAP"; ADDR $F749; COMMENT "CHARACTER BYTES TO BITMAPS FOR DISPLAY";};
LABEL { NAME "DISPLAYCHAR"; ADDR $F6F1; COMMENT "CHARACTER BYTES TO BITMAPS FOR DISPLAY";};

label {addr $F6AC; name "BYTETOSCREEN"; comment "ASCII character in A, displays bytes from character rom to screen";};

LABEL { ADDR $FC00; NAME "RESET";};
LABEL { ADDR $FC1A; NAME "LOADFROMTAPE"; COMMENT "10-byte header: X---efabcd. Load the program with entry point EF, starting at AB, length CD";};
LABEL { ADDR $FC9B; NAME "RESET2"; COMMENT "RESET CONTINUES IF 6530IO BIT 7 IS 1. CTRL+RESET?";};
LABEL { ADDR $FC2E; NAME "WAITFORX"; COMMENT "LOOPS WAITING FOR X FROM 6522";};


LABEL { ADDR $F85B; NAME "NextPx-Byte"; comment "increments FD pixel counter, rolls over and increments SCRNLO";};


LABEL { ADDR $F86F; NAME "UP1LINE"; comment "subtracts 40bytes from SCRNLO - up 1px line";};
LABEL { ADDR $F87B; NAME "DN1LINE"; comment "adds 40bytes to SCRNLO - down 1px line";};

LABEL { ADDR $F8AA; NAME "GO UP";};
LABEL { ADDR $F8B0; NAME "GO DOWN";};

LABEL { ADDR $F5D2; NAME "MoveLineDown1"; comment "adds 400 bytes (1 line) to FB, sets to f1 source address";};

LABEL { ADDR $F606; name "nextY";};
LABEL { ADDR $F620; name "Clear1Line"; comment "A=0. loops 256, then 144 more times. 400 bytes zeroed out.";};
LABEL { ADDR $F625; name "storeZero";};

LABEL { ADDR $FDB9; name "outputByte"; comment "if 0E is clear, sends ACC to 6522 portB clears carry. Else, returns with Carry set, ";};
LABEL { ADDR $FDD1; name "set0E-HI";};
LABEL { ADDR $FDE0; name "RestoreACC";};
LABEL { ADDR $FDD5; name "InterruptWaiting"; comment "if interrupts waiting, clear OE";};
LABEL { ADDR $FD4C; name "SendSPACE"; comment "if 0F is clear, sends $20 (space), decrements 0D (string counter?)";};
LABEL { ADDR $FCF0; name "0607to0A0B"; comment "sets 0A,0B == 06,07. Then increments 0A,0B.";};
LABEL { ADDR $FCFF; name "0A0Bto2000"; comment "if 0A,0B = 00,80, resets to 00,20. Looping over $2000 to $8000?";};

LABEL { ADDR $FCB5; name "addrsTo2000"; comment "sets 06,07 and 08,09 to point to $2000. top of 16k memory?";};
LABEL { ADDR $FCC1; name "zero0C0D0E";};

LABEL { ADDR $0004; name "progEntLo";};
LABEL { ADDR $0005; name "progEntHi";};
LABEL { ADDR $0000; name "progStartLo";};
LABEL { ADDR $0001; name "progStartHi";};
LABEL { ADDR $0002; name "progLenLo";};
LABEL { ADDR $0003; name "progLenHi";};

LABEL { ADDR $FC7C; name "JumpToProgram";};
LABEL { ADDR $FC74; name "CountDown";};
LABEL { ADDR $FC69; name "LoadByte";};
LABEL { ADDR $FC5F; name "SetByteCounter";};
LABEL { ADDR $FC3B; name "GetProgramHead";};

LABEL { ADDR $F3B8; name "ShiftLeft8x";};
LABEL { ADDR $FB06; name "ZeroE3E4";};

LABEL { ADDR $FB27; name "IsNull";};
LABEL { ADDR $FB2F; name "IsMinusOrPlus";};

LABEL { ADDR $F8FA; name "Jump160C";};
LABEL { ADDR $F84F; name "DoTwice";};

LABEL { ADDR $FD9B; name "ReadByte"; comment "checks for interrupt 02, CA1 active. reads byte. clears interrupt";};

LABEL { ADDR $FC21; name "DataDirIN";};
LABEL { ADDR $FC24; name "CBHandshake";};
LABEL { ADDR $FC09; name "Get6530Byte";};
LABEL { ADDR $FC0C; name "noHiBit";};
LABEL { ADDR $FC14; name "ShiftByte";};
LABEL { ADDR $FC15; name "no6Bit";};

LABEL { ADDR $000F; name "MODE"; comment "shifted 6530 byte at reset, controls boot mode?";};

LABEL { ADDR $00FA; name "CounterFA";};
LABEL { ADDR $00FD; name "BitOfByte";};
LABEL { ADDR $F757; name "PixelLoop";};
LABEL { ADDR $00F6; name "ByteToDisplay1";};
LABEL { ADDR $00F5; name "ByteToDisplay2";};

LABEL { ADDR $F762; name "rotateBitsIn";};
LABEL { ADDR $F768; name "storeByteF5";};
LABEL { ADDR $F76D; name "topOfChar"; comment "gets the bits for the top byte of the char, uses F7 as scratch";};
LABEL { ADDR $F775; name "1or3";};
LABEL { ADDR $F77D; name "combine3+4"; comment "byte 3 is shifted right 3x, ...XXX.., byte 4 is shifted left 3x, ......XX saved to F7";};
LABEL { addr $00F7; name "F7Scratch";};

LABEL { addr $F407; name "waitForInput"; comment "waiting for byte at BF5B bit 7 to go high";}; 
LABEL { addr $FA01; name "LessThan";};
LABEL { addr $FA0C; name "QuestionMark";};
LABEL { addr $FA1B; name "GreaterThan";};
LABEL { addr $F4CC; name "makeUPPERCASE";};
LABEL { addr $BF5B; name "ReadyHi?";};


# LABEL {ADDR $F201; SIZE $5; NAME "???"; COMMENT "???";};
# LABEL {NAME "??"; ADDR $FBFF; COMMENT "???";};

LABEL {NAME "GETCHAR1"; ADDR $F25D; COMMENT "GET CHAR Y FROM INPUT BUFFER";};
LABEL {NAME "GETCHAR2"; ADDR $F3A8; COMMENT "GET CHAR Y FROM INPUT BUFFER, COMPARE TO NULL AND $161E";};
LABEL {NAME "NEXTCHAR"; ADDR $F39D; COMMENT "GET CHAR Y FROM INPUT BUFFER, COMPARE TO SPACE AND $161E";};
LABEL {NAME "NEXTCHAR2"; ADDR $F26F; COMMENT "GET CHAR Y FROM INPUT BUFFER, COMPARE TO $1624";};

LABEL {NAME "SPACENULL"; ADDR $F2F7; COMMENT "ADD SPACE #$20 AND NULL #$00 TO (T3)";};
LABEL {NAME "NULL"; ADDR $F2FC; COMMENT "ADD NULL #$00 TO (T3)";};

LABEL {NAME "LOWERCASE"; ADDR $F4C2; COMMENT "CHARACTER IS LOWER CASE - BETWEEN A $61 AND { $7B";};

LABEL {NAME "DOWNLOOP"; ADDR $F7A9;};
LABEL {NAME "UPLOOP"; ADDR $F7A0;};


LABEL {NAME "SPACELOOP"; ADDR $F39C; COMMENT "LOOP ON SPACE, RTS ON $161E";};

LABEL { NAME "R/W"; ADDR $F9D5;};
LABEL { NAME "IS R"; ADDR $F9E4;};
LABEL { NAME "DO R"; ADDR $FA31; comment"Select and edit a register?";};
LABEL { NAME "WhichRegister"; 	ADDR $FA44; comment "adds $70 to 0-4, returns";};

# F213 stores $70-$74 in DD. 16 in DE. What's at $1670?
# F314 loads 1670,x. looks like it sets up the values for display in hex. 

LABEL { NAME "IS W"; ADDR $F9EC;};
LABEL { NAME "DO W"; ADDR $FAEE;};
LABEL { NAME "IS T?"; ADDR $F25E; COMMENT "CHECKS CHAR FOR ASCII T, COMPARE TO $1624";};
LABEL { NAME "IS W?"; ADDR $F27F; COMMENT "CHECKS CHAR FOR ASCII W";};
LABEL { NAME "IS R?"; ADDR $F20B;};
LABEL { NAME "NOT R"; ADDR $F210;};
LABEL { NAME "NOT W"; ADDR $F294;};

LABEL { NAME "TAB"; ADDR $F62B; COMMENT "CHECKS FOR ASCII TAB";};
LABEL { NAME "DO TAB"; ADDR $F62F;};

LABEL { NAME "LFEED"; ADDR $F669; COMMENT "CHECKS FOR ASCII LINEFEED";};
LABEL { NAME "DO LFEED"; ADDR $F5C0;};

LABEL { NAME "CANCEL"; ADDR $F670; COMMENT "CHECKS FOR ASCII CANCEL";};
LABEL { NAME "DO CANCEL"; ADDR $F5BD;};

LABEL { NAME "CAN/CR"; ADDR $F4E0; COMMENT "CHECKS FOR CANCEL/CR?";};

LABEL { NAME "EQUALS"; ADDR $F241; COMMENT "CHECKS FOR EQUALS";};
LABEL { NAME "ISEQUALS"; ADDR $F223; COMMENT "CHECKS FOR EQUALS";};

LABEL { NAME "-OR+"; ADDR $FB11; COMMENT "MINUS OR PLUS";};



LABEL { NAME "N/S/E"; ADDR $F1F8; COMMENT "IF NULL/SPACE/EQUALS, PUT ZERO IN TBL1, GET NEXT CHAR";};

LABEL { NAME "CHARTOT1"; ADDR $F1E2; COMMENT "GETS 8 CHARACTERS FROM BUFFER, PUTS THEM IN TBL1 AT $BF51";};



LABEL { NAME "FSYXALC"; ADDR $F30B; COMMENT "grabs characters for display, values from 1670,x to display as hex";};
LABEL { NAME "FSYXAUC"; ADDR $FA39; COMMENT "CHECKS INPUT AGAINST FSYXA UPPER CASE";};

LABEL { NAME "LT30"; ADDR $F372; COMMENT "INPUT LESS THAN ASCII 0x30";};
LABEL { NAME "COLON"; ADDR $F376; COMMENT "ASCII 0x3A = COLON";};

LABEL { NAME "BACKSPACE"; ADDR $F677; COMMENT "CHECKS FOR ASCII BACKSPACE";};
LABEL { NAME "FFEED"; ADDR $F69A; COMMENT "CHECKS FOR ASCII FORM FEED";};
LABEL { NAME "DO FFEED"; ADDR $F956;};
LABEL { NAME "FFEED LOOP1"; ADDR $F960;};
LABEL { NAME "FFEED LOOP2"; ADDR $F962;};

LABEL { NAME "CR"; ADDR $F654; COMMENT "CHECKS FOR ASCII CARRIAGE RETURN";};
LABEL { NAME "DOCR"; ADDR $F65A;};

LABEL { NAME "CRLF"; ADDR $F6A5; comment "sends CR, LF";};

LABEL { NAME "RTS1"; ADDR $F668;};
LABEL { NAME "RTS2"; ADDR $F653;};
LABEL { NAME "RTS3"; ADDR $F3C7;};
LABEL { NAME "RTS4"; ADDR $F86E;};
LABEL { NAME "RTS5"; ADDR $F87A;};
LABEL { NAME "RTS6"; ADDR $F886;};
LABEL { NAME "RTS7"; ADDR $F3A6;};
LABEL { NAME "RTS8"; ADDR $F3B7;};
LABEL { NAME "RTS9"; ADDR $FD9A;};
LABEL { NAME "RTS10"; ADDR $FDB8;};
LABEL { NAME "RTS11"; ADDR $F2A4;};
LABEL { NAME "RTS12"; ADDR $F2CE;};

LABEL { NAME "SWAP EBF3"; ADDR $F84D; COMMENT "swaps content of EB,EC with F3,F4";};
LABEL { NAME "INVERT"; ADDR $F89B;};


LABEL { NAME "ATODD"; ADDR $F29A; COMMENT "returns with ACCUMULATOR IN ($DD)";};

LABEL { NAME "INCDDDE"; ADDR $F2CF; COMMENT "INCREMENT $DD,$DE counter?";};


LABEL { NAME "CONVERTTOHEX"; ADDR $F3E1; COMMENT "00x,01x bytes into ascii for hex display";};


LABEL { NAME "SPLITBITS"; ADDR $F3EA; COMMENT "SPLITS A INTO TOP AND BOTTOM 4 BITS, STORES AT $E9/$EA, $EB/$EC";};
LABEL { NAME "DDtoDF"; ADDR $FBB0; COMMENT "enter with X=DF. Returns with DD,DE->DF,E0";};
LABEL { NAME "E3toDD"; ADDR $FBB9; COMMENT "returns with $E4->DE, $E3->$DD";};
LABEL { NAME "DDplusDF"; ADDR $FB94; COMMENT "returns with $DF+$DD, $E0+$DE";};
LABEL { NAME "EDEEto00"; ADDR $F664; COMMENT "returns with $ED EE->#$00.";};
LABEL { NAME "0A0Bto0607"; ADDR $FD25; COMMENT "returns with $0A,$0B in $06,$07";};
LABEL { NAME "WAITFORIO"; ADDR $FC7F; COMMENT "LOOPS UNTIL INPUT ON 6522. INTERRUPT FLAG BIT 1 SET ON IO AT 6522 PORTA";};
LABEL { NAME "T3SET"; ADDR $F2AD ; comment "JSR to T3 to set data table 3";};

# FD9B check for shift register interrupt, reads byte into A, clears PCR



# CHANGES
LABEL { NAME "MOD1";  ADDR $FBD4; COMMENT "MODIFIED $40 -> $3F";}; 


